name: CI/CD Pipline

# Making 2 triggers one when push changes in main, and the other manully any time you want 
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  test-and-package:
   runs-on: ubuntu-latest

   env:
    Python_v: '3.x'
    require_file: 'requirements.txt'

   steps:
     - name: checkout code
       uses: actions/checkout@v2

     - name: set up Python
       uses: actions/setup-python@v2
       with:
         python-version: ${{ env.Python_v }}

     - name: create virtual environment
       run: |
        python -m pip install --upgrade pip
        pip install -r ${{ env.require_file }}
      
     - name: run tests
       run: |
        python -m unittest discover -s my_package/tests -p 'test_*.py'

     - name: lint with python 
       run: |
        pip install pylint
        pylint my_package/main.py

     - name: build package
       run: |
        python setup.py sdist bdist_wheel
        mkdir artifacts
        mv dist/* artifacts

     - name: upload artifacts
       uses: actions/upload-artifact@v2
       with:
         name: my_flask_app
         path: artifacts


  deploy:
    needs: test-and-package
    runs-on: ubuntu-latest
    environment: Production

    steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Install SSH key
      run: | 

        # Ensure ssh folder is exist  
        mkdir -p ~/.ssh

        # Copy id_rsa to runner to connect to instance
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 54.172.224.100 >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |

          # Connect ssh to instance and perform these commands 
          ssh -i ~/.ssh/id_rsa ec2-user@54.172.224.100 "
            
            # Update the system packages
            sudo yum update -y;

            # Check if git is installed and if not install it
            if ! command -v git &> /dev/null
            then
                sudo yum install git -y;
            fi

            # Check if pip3 is installed, if not install it
            if ! command -v pip3 &> /dev/null
            then
                sudo yum install python3-pip -y;
            fi


            # Clone the repository if it doesn't exist,
            if [ ! -d \"CI-CD_Project\" ]; then
                git clone https://github.com/SamMelad/CI-CD_Project.git;
                cd CI-CD_Project;
            else
                # If repo already exist and this deployment for features it will pull changes only
                cd CI-CD_Project;
                git pull;
            fi


            # Install required Python packages for this app
            pip3 install -r requirements.txt;


            # Run the Python app 
            python3 my_package/main.py"
